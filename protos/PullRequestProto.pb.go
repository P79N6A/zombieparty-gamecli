// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PullRequestProto.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// request frames in [startFrameNo, endFrameNo)
type PullRequest struct {
	RoundId      string `protobuf:"bytes,1,opt,name=roundId" json:"roundId,omitempty"`
	StartFrameNo int32  `protobuf:"varint,2,opt,name=startFrameNo" json:"startFrameNo,omitempty"`
	EndFrameNo   int32  `protobuf:"varint,3,opt,name=endFrameNo" json:"endFrameNo,omitempty"`
}

func (m *PullRequest) Reset()                    { *m = PullRequest{} }
func (m *PullRequest) String() string            { return proto.CompactTextString(m) }
func (*PullRequest) ProtoMessage()               {}
func (*PullRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *PullRequest) GetRoundId() string {
	if m != nil {
		return m.RoundId
	}
	return ""
}

func (m *PullRequest) GetStartFrameNo() int32 {
	if m != nil {
		return m.StartFrameNo
	}
	return 0
}

func (m *PullRequest) GetEndFrameNo() int32 {
	if m != nil {
		return m.EndFrameNo
	}
	return 0
}

func init() {
	proto.RegisterType((*PullRequest)(nil), "PullRequest")
}

func init() { proto.RegisterFile("PullRequestProto.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x0b, 0x28, 0xcd, 0xc9,
	0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x09, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2b, 0x00, 0x91,
	0x4a, 0xd9, 0x5c, 0xdc, 0x48, 0x32, 0x42, 0x12, 0x5c, 0xec, 0x45, 0xf9, 0xa5, 0x79, 0x29, 0x9e,
	0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0x90, 0x12, 0x17, 0x4f, 0x71, 0x49,
	0x62, 0x51, 0x89, 0x5b, 0x51, 0x62, 0x6e, 0xaa, 0x5f, 0xbe, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b,
	0x10, 0x8a, 0x98, 0x90, 0x1c, 0x17, 0x57, 0x6a, 0x5e, 0x0a, 0x4c, 0x05, 0x33, 0x58, 0x05, 0x92,
	0x88, 0x93, 0x09, 0x97, 0x46, 0x72, 0x7e, 0xae, 0x5e, 0x66, 0x6e, 0x6e, 0x7e, 0x6e, 0xbe, 0x5e,
	0x55, 0x7e, 0x6e, 0x52, 0x66, 0x6a, 0x41, 0x62, 0x51, 0x49, 0xa5, 0x5e, 0x7a, 0x62, 0x6e, 0x6a,
	0x71, 0x6a, 0x51, 0x59, 0x6a, 0x11, 0xc4, 0x5d, 0xc5, 0x01, 0x8c, 0x51, 0x6c, 0x10, 0x56, 0x12,
	0x84, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x66, 0xfe, 0xf5, 0xc3, 0x00, 0x00, 0x00,
}
